@page "/Login"
@using Abence.WEB.Services.AuthServices
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject IAuthenticationService AuthenticationService

<EditForm Model="model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Correo electrónico:</label>
        <InputText id="email" class="form-control" @bind-Value="model.Email" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>

    <div class="mb-3">
        <label for="password">Contraseña:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Ingresar</button>
</EditForm>

@code {
    private LoginFormModel model = new();
    private bool redirected = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !redirected)
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                redirected = true;
                Navigation.NavigateTo("/Inicio", true);
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await AuthenticationService.Login(model);
            Navigation.NavigateTo("/Inicio", true);
        }
        catch (Exception ex)
        {
        }
    }
}